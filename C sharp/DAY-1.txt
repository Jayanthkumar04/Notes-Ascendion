// int, float, double, char, bool, decimal (we use it for currency), byte (numbers), short, ushort, long

// string is not primtive, but behaves like a primitive

by default ==> private

int _number = 100; // for private
int @int = 1000; // for variables with keyword as name prefix with @

var x = 100; // if we give an initial value, we can use var to let the compiler interpret the data type

decimal cost = 2.50m; // 

int quantityOfBooksInt = int.Parse(quantityOfBooks);

Console.WriteLine(string.Join(", ", names)); // "John Doe, Jane, Mark, Mary"

=====================
Accessing in Reverse
=====================
 Console.WriteLine(names[^1]); // 1-based index for accessing from the end


for(int i=1;i<=arr.Length;i++)
        {
            Console.WriteLine(arr[^i]);
        }
======================

======================
// get range of array items - includes start index item, excludes end index item
var someNames = names[1..3]; // { "Jane", "Mark" }


==================

2D ARRAY

===================

int[,] matrix = new int[2, 3] 
		{
			{ 1, 2, 3 },
            { 4, 5, 6 }
        };


Console.WriteLine(matrix.GetLength(0));//rows
Console.WriteLine(matrix.GetLength(1));//cols

=========
switch case
======

You can use relational operator in case expression (case <= 5)

switch(units)
            {
                case < 50 :
                    return units * 0.20;
                    break;
            
             default:
                    double four = units - 200;
                    return (50 * 0.20) + (50 * 0.25) + (100 * 0.30) + (four * 0.35);
                    break;

}

================
namespace
================
// if we use this syntax then we can define multiple namespaces in a single file

namespace Demo
{

public class cccc{



}

===========
Enumeration
============
public enum Days{
    
    monday,tuesday,wednesday,thursday
}

consists of a set of named constants called the enumerator list. Enums are used to represent a collection of related constants in a more readable and maintainable way

==============

==============
