@model List<Workshop>

@if (TempData["success"] != null)
{
    <p class="alert alert-success">@TempData["success"]</p>
}

<div class="row mb-3">
    <div class="col-6">
        <h1>List of Workshops</h1>
    </div>
    <div class="col-6 text-end">
        <a asp-controller="Workshop" asp-action="Create" class="btn btn-dark">
            <i class="bi bi-plus-circle"></i>
            Create Workshop
        </a>
    </div>
</div>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Rating</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var workshop in Model)
        {
            <tr>
                <td>@workshop.Name</td>
                <td>@workshop.Rating</td>
                <td>
                    <!-- Edit Button -->
                    <a asp-controller="Workshop" asp-action="Edit" asp-route-id="@workshop.Id" class="btn btn-dark">
                        <i class="bi bi-pencil-square"></i> Edit
                    </a>

                    <!-- Delete Button (Using DELETE method) -->
                    <form id="deleteForm@workshop.Id" action="@Url.Action("Delete", "Workshop", new { id = workshop.Id })" method="post" style="display: inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this workshop?');">
                            <i class="bi bi-trash-fill"></i> Delete
                        </button>
                    </form>

                    <script>
                        document.getElementById("deleteForm@workshop.Id").addEventListener('submit', function (event) {
                            event.preventDefault();
                            var form = this;

                            // Create the DELETE request using fetch API
                            fetch(form.action, {
                                method: 'DELETE',
                                body: new URLSearchParams(new FormData(form)),
                                headers: {
                                    'Accept': 'application/json',
                                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()  // Add anti-forgery token
                                }
                            })
                            .then(response => {
                                if (response.ok) {
                                    location.reload();  // Reload the page to show the updated list
                                } else {
                                    alert('Failed to delete the workshop');
                                }
                            })
                            .catch(error => {
                                alert('An error occurred while trying to delete the workshop');
                            });
                        });
                    </script>
                </td>
            </tr>
        }
    </tbody>
</table>
