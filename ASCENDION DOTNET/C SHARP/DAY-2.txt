PRIVATE ,PUBLIC, PROTECTED, INTERNAL PROTECTED ===> LOOK INTO SCOPES 

==============
PROPERTIES
==============

:get:reading
:set:writing
1)readonly//get
2)writeonly//set
3)read and write //get,set
4)abstract
5)autoimplemented
6)static

//by default members are private

====================================
ex
==============

namespace ASCENDION_OOPS
{
    public class Emp
    {

        int id;
        string name;
        double salary;
        public Emp()
        {
            Console.WriteLine("emp constructor call");
            id = 0;
            name = "not given";
            salary = 0;
        }

        public int Id { get { return id; } set { id = value; } }
        
        public string Name { get { return name; } set { name = value; } }

        public double Salary { get { return salary; } set { salary = value; } }

    }
}
================
================
internal class Program
{
    static void Main(string[] args)
    {

        Emp emp = new Emp();

        Console.WriteLine("INITIAL VALUES: ");
        Console.WriteLine($"Id:{emp.Id} Name:{emp.Name} Salary{emp.Salary}");


        Console.WriteLine("Enter Id");
        emp.Id = int.Parse(Console.ReadLine());

        Console.WriteLine("Enter Name");
        emp.Name = Console.ReadLine();

        Console.WriteLine("Enter salary");
        emp.Salary = double.Parse(Console.ReadLine());

        Console.WriteLine("Details");
        Console.WriteLine($"Id:{emp.Id} Name:{emp.Name} Salary{emp.Salary}");

        Console.ReadKey();

    }
}

