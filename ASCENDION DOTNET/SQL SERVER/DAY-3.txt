=====================
STORED PROCEDURES
=====================
1)BUILT-IN STO. PRO.. 2)USER-DEFINED ST..PRO..

=>GROUP OF TRANSACT-SQL STATEMENTS THAT ACT AS SINGLE BLOCK OF CODE THAT PERFORMS A SPECIFIC TASK

=>IT PROVIDES SECURITY OUTSIDERS CANT INJECT ANY QUERY

=======
SYNTAX
=======
=====================
1)CREATING PROCEDURE
=====================
create procedure <proc-name>

parameters

as

begin

sql statements

end
==============================
CREATE PROCEDURE usp_AllPlayers
AS
BEGIN
SELECT PID 'Player Id', PName 'Player Name',PAvg 'Player avg', PTeam 'Player Team' FROM Player;
END
==============================

=======================
2)Executing Procedures
=======================
exec <proc-name>

EXEC usp_AllPlayers;

INSERT INTO Player values (4,'ABD',76.56,'south africa');

EXEC usp_AllPlayers;

====================
WITH PARAMETERS
====================
CREATE PROC usp_ParticularPlayer 
@Id int
as 
BEGIN
select *from Player where PId = @Id
end;

=====================
EXECUTE usp_ParticularPlayer 2;

EXECUTE usp_ParticularPlayer @Id=2;
==========================


=============
ALTERING 
=============

alter PROC usp_ParticularPlayer 
@Id int = 1
as 
BEGIN
select *from Player where PId = @Id
end;
===============================================
built-in Procedures(system stored procedures)
===============================================
@@RowCount

exec sp_tables;  //shows all tables
 
exec sp_helptext usp_AllPlayers; // shows the stored procedure statements

===========================
encrypting stored procedure                     
===========================
ALTER PROC usp_dPlayer
@Id int
WITH ENCRYPTION            ***************
as
begin
	delete from Player where PId = @Id
	if(@@ROWCOUNT <> 0)
		begin
	print 'recorded deleted!!'
		end
end	

EXEC sp_helptext usp_dPlayer;	

====================================

================
output parameters
==================

CREATE PROC usp_salaryByDept
@did int,
@total float output
as
begin
select @total = sum(Salary) from Emps group by Department having Department=@did
end

==============
using print
==============
declare @SumSalary float
execute usp_salaryByDept 2 , @SumSalary output
print 'Sum of salaries: '+convert(nvarchar(30),@SumSalary)
===========================
===========================


==============
nested proc
==============
ALTER PROC usp_nestPro
@did int
as
begin
declare @sum float
execute usp_salaryByDept @did,@sum out
if(@sum <>0)
begin
print 'Sum of salaries of department: '+convert(nvarchar(50),@did)+'is =' +convert(nvarchar(50),@sum)
end
else
begin
print 'No data available'
end
end

=======================
USER DEFINED FUNCTIONS
=======================
-------------------
1)CREATE FUNCTION
-------------------
CREATE FUNCTION fnFullName(@fn nvarchar(50), @ln nvarchar(50))
returns nvarchar(101)
begin
return @fn+''+@ln
end
-------------------
2)EXECUTE FUNCTION
-------------------
select dbo.fnFullName('Ravi','kumar') 'FULL NAME';

========
EX-2
=======
CREATE TABLE bank.Customers
(
id int primary key identity(1000,1),
fname nvarchar(50),
lname nvarchar(50),
contact nvarchar(50)
);
INSERT INTO bank.Customers (fname, lname, contact)
VALUES
    ('John', 'Doe', '555-1234'),
    ('Jane', 'Smith', '555-5678'),
    ('Michael', 'Johnson', '555-8765'),
    ('Emily', 'Davis', '555-4321'),
    ('David', 'Martinez', '555-7890');
	select *from bank.Customers;
	go
CREATE FUNCTION bank.fnGnPwd 
(@fn nvarchar(50),@id int,@ln nvarchar(50),@contact nvarchar(50))
returns nvarchar(50)
as
BEGIN
return right(@fn,2)+''+CONVERT(nvarchar(10),@id)+''+left(@ln,2)+''+@contact;
end

select fname,lname,contact,bank.fnGnPwd(fname,id,lname,contact) AS 'GENERATED PWD' from bank.Customers;
========================
=========================


3)

create function lg.fnTax
(@price float)
returns float 
as 
begin
declare @tax float;
if(@price >= 25000)
begin
select @tax = @price*0.18
end
else
begin
select @tax=@price*0.10
end
return @tax;
end

select PPPrice,lg.fnTax(PPrice) from lg.products;

=========================
SYSTEM STORED PROCEDURES
=========================
EXEC sp_pkeys 'Emps';

https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/system-stored-procedures-transact-sql?view=sql-server-ver16


=============================







